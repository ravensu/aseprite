name: build
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]
        include:
          - os: windows-latest
            build_type: Release
            enable_ui: on
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'
      - name: Generating Makefiles
        shell: bash
        run: |
          # 下载 Skia
          curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip
          7z x skia.zip

          # 配置静态编译
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DENABLE_UI=${{ matrix.enable_ui }} \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=./skia \
            -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
            -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib \
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded \
            -DUSE_SHARED_CRT=OFF
      - name: Compiling
        shell: bash
        run: |
          cd build && ninja
      - name: Prepare final package
        shell: bash
        run: |
          mkdir -p dist
          cp build/bin/aseprite.exe dist/
          cp -r build/bin/data dist/
          # 检查是否有依赖的 DLL
          echo "Checking dependencies:"
          ldd build/bin/aseprite.exe 2>/dev/null || echo "ldd not available on Windows"
          # 在 Windows 上使用 dumpbin 检查依赖
          dumpbin /dependents build/bin/aseprite.exe || echo "dumpbin not available"
      - uses: actions/upload-artifact@v4
        with:
          name: aseprite
          path: dist/
